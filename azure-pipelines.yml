# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: 
  vmImage: ubuntu-latest

jobs:
  
  - job: checkout
    steps:
      - checkout: self
      - script: ls -1 -d "$PWD/"frontend/out/*
  - job: "Build_Fusion_App"
    steps:
      - task: UseDotNet@2
        displayName: "Install Dotnet"
        inputs:
            packageType: "sdk"
            version: "5.0.x"      
      - task: NodeTool@0
        inputs:
            versionSpec: "16.x"
      - task: Npm@1
        displayName: "Install frontend"
        inputs:
            command: "install"
            workingDir: "frontend"
      - task: Npm@1
        displayName: "Bundle frontend"
        inputs:
            command: "custom"
            workingDir: "frontend"
            customCommand: "run-script build"
      - task: PublishPipelineArtifact@1
        inputs:
            targetPath: "$(Build.SourcesDirectory)/frontend/out/dcd.zip"
            artifactName: ConceptApp  
  - deployment: deploy_app
    displayName: 'Deploy application'
    dependsOn: Build_Fusion_App
    environment: dev
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
                artifact: ConceptApp
          - script: ls -1 -d "$PWD/"frontend/out/*  
          - task: FusionApp@2
            displayName: 'Deploying app'
            inputs:
              action: deploy
              appKey: "dcd"
              bundlePath: "$(Agent.BuildDirectory)/dcd.zip"
              fusionCredentials: 'conceptapp-preprod'
              tokenResource: "f8fbc211-ab05-404b-b94e-e3abdc364f22"
              portalUrl: "https://pro-s-portal-ci.azurewebsites.net"
              forceReplaceExisting: "True"
              ignoreVersionConflict: "True"